// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace DeveloperTesting.Database
{
    public partial class FamilyLeeDBContext : DbContext
    {
        public FamilyLeeDBContext()
        {
        }

        public FamilyLeeDBContext(DbContextOptions<FamilyLeeDBContext> options)
            : base(options)
        {
        }

        public virtual DbSet<TablePeple> TablePeple { get; set; }
        public virtual DbSet<TableRerations> TableRerations { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
                optionsBuilder.UseSqlServer("Data Source=(localdb)\\MSSQLLocalDB;Initial Catalog=test;Integrated Security=True");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<TablePeple>(entity =>
            {
                entity.HasKey(e => e.PepleId)
                    .HasName("PK__table_Pe__83E36D51E53DE4E5");

                entity.ToTable("table_Peple");

                entity.Property(e => e.PepleId)
                    .ValueGeneratedNever()
                    .HasColumnName("PepleID");

                entity.Property(e => e.BirthDay).HasColumnType("date");

                entity.Property(e => e.FkReration).HasColumnName("FK_Reration");

                entity.Property(e => e.PepleName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.FkRerationNavigation)
                    .WithMany(p => p.TablePeple)
                    .HasForeignKey(d => d.FkReration)
                    .HasConstraintName("FK__table_Pep__FK_Re__49C3F6B7");
            });

            modelBuilder.Entity<TableRerations>(entity =>
            {
                entity.HasKey(e => e.RerationId)
                    .HasName("PK__table_Re__B8FA26BA65065568");

                entity.ToTable("table_Rerations");

                entity.Property(e => e.RerationId)
                    .ValueGeneratedNever()
                    .HasColumnName("RerationID");

                entity.Property(e => e.RerationShip)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Senior)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}